import{_ as s,c as a,o as n,a as e}from"./app.fba5d4fc.js";const A=JSON.parse('{"title":"Clients","description":"","frontmatter":{},"headers":[{"level":2,"title":"Client Args","slug":"client-args","link":"#client-args","children":[]},{"level":2,"title":"Client Response","slug":"client-response","link":"#client-response","children":[{"level":3,"title":"JikanResponse<T>","slug":"jikanresponse-t","link":"#jikanresponse-t","children":[]},{"level":3,"title":"Pagination","slug":"pagination","link":"#pagination","children":[]}]}],"relativePath":"guides/client.md"}'),l={name:"guides/client.md"},t=e(`<h1 id="clients" tabindex="-1">Clients <a class="header-anchor" href="#clients" aria-hidden="true">#</a></h1><h2 id="client-args" tabindex="-1">Client Args <a class="header-anchor" href="#client-args" aria-hidden="true">#</a></h2><p>Client arguments for logging and cache configurations:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ClientArgs</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">loggerOptions</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LoggerOptions</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">cacheOptions</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CacheOptions</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">baseURL</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// Location of the JikanAPI. Leave empty to use the official JikanAPI instance.</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>See also:</p><ul><li><a href="https://axios-cache-interceptor.js.org/guide" target="_blank" rel="noreferrer">axios-cache-interceptor Configuration</a>.</li><li><a href="https://tslog.js.org/#/?id=settings" target="_blank" rel="noreferrer">tslog Settings</a>.</li></ul><h2 id="client-response" tabindex="-1">Client Response <a class="header-anchor" href="#client-response" aria-hidden="true">#</a></h2><h3 id="jikanresponse-t" tabindex="-1"><code>JikanResponse&lt;T&gt;</code> <a class="header-anchor" href="#jikanresponse-t" aria-hidden="true">#</a></h3><p>The requested resource is received in the data property.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  data: T;</span></span>
<span class="line"><span style="color:#A6ACCD;">  pagination?: JikanPagination;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="pagination" tabindex="-1">Pagination <a class="header-anchor" href="#pagination" aria-hidden="true">#</a></h3><p>If the endpoint is paginated, it will receive a <em>JikanPagination</em> property.</p><h4 id="jikanpagination" tabindex="-1"><code>JikanPagination</code> <a class="header-anchor" href="#jikanpagination" aria-hidden="true">#</a></h4><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  last_visible_page: number;</span></span>
<span class="line"><span style="color:#A6ACCD;">  has_next_page: boolean;</span></span>
<span class="line"><span style="color:#A6ACCD;">  items?: JikanPaginationItems;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h4 id="jikanpaginationitems" tabindex="-1"><code>JikanPaginationItems</code> <a class="header-anchor" href="#jikanpaginationitems" aria-hidden="true">#</a></h4><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  count: number;</span></span>
<span class="line"><span style="color:#A6ACCD;">  total: number;</span></span>
<span class="line"><span style="color:#A6ACCD;">  per_page: number;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,16),p=[t];function o(i,c,r,d,C,h){return n(),a("div",null,p)}const y=s(l,[["render",o]]);export{A as __pageData,y as default};
